q()
> install.packages("tidyverse")
install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/User1/Desktop/Class/R_Analysis")
setwd("C:/Users/User1/Desktop/Class/R_Analysis")
setwd("C:/Users/User1/Desktop/Class/R_Analysis/01_Demo")
setwd("C:/Users/User1/Desktop/Class/R_Analysis/01_Demo")
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
View(demo_table)library(package)
library(package)
library(package)
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
View(demo_table)
View(demo_table2)
x[3]
x[3]
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
View(demo_table2)
View(filter_table)
subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
View(filter_table3)
View(filter_table3)
View(filter_table3)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
# Linear Regression to Predict MPG
#import libraries
library(dplyr)
#read file
MechaCarData <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors=F)
#create linear regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCarData)
#create summary
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCarData))
#-----------------------------------------
#Del 2
#read file
library(dplyr)
setwd("C:/Users/User1/Desktop/Class/MechaCar_Statistical_Analysis")
SuspensionCoilData <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors=F)
#create summary table
total_summary <- SuspensionCoilData %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
View(SuspensionCoilData)
#create summary table grouped by lot
lot_summary <- SuspensionCoilData %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI), .groups = 'keep')
View(lot_summary)
# T-Tests on Suspension Coils
#t-test for all manufacturing lots
t.test(SuspensionCoilData$PSI, mu=1500)
#t-test for lot 1
t.test(subset(SuspensionCoilData$PSI, SuspensionData$Manufacturing_Lot == "Lot1"), mu=1500)
#t-test for lot 2
t.test(subset(SuspensionCoilData$PSI, SuspensionData$Manufacturing_Lot == "Lot2"), mu=1500)
#t-test for lot 3
t.test(subset(SuspensionCoilData$PSI, SuspensionData$Manufacturing_Lot == "Lot3"), mu=1500)
View(total_summary)
View(SuspensionCoilData)
View(SuspensionData)
